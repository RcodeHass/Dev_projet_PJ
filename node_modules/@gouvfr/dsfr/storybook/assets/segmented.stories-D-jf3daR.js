import{u as A,e as H}from"./renderer-CAejfPdL.js";import"./_commonjsHelpers-BosuxZz1.js";const N={size:{control:{type:"select"},description:"Taille du contrôle segmenté",options:["sm","md"]},legend:{control:"text",description:"Légende du contrôle segmenté",type:{value:"string"}},legendInline:{control:"boolean",description:"Si true, affiche la légende sur la même ligne que le contrôle segmenté",type:{value:"boolean"}},noLegend:{control:"boolean",description:"Si true, n'affiche pas la légende",type:{value:"boolean"}},hint:{control:"text",description:"Texte additionnel du contrôle segmenté",type:{value:"string"}},hasIcon:{control:"boolean",description:"Le contrôle segmenté a une icône"}},o=(e=3,t=!1)=>{const n=[],m=A("segmented");for(let s=1;s<=e;s++)n.push({checked:s===1,label:`libellé ${s}`,name:m,value:s,icon:"checkbox-circle-line",disabled:t&&s===3||!1,id:`${m}-${s}`});return n},g={size:"md",legend:"Légende",legendInline:!1,noLegend:!1,hint:void 0,hasIcon:!1,elements:o()},R=e=>{const t={size:e.size||g.size,legend:e.legend||g.legend,legendInline:e.legendInline||!1,noLegend:e.noLegend||!1,hint:e.hint!==""?e.hint||g.hint:void 0,elements:[...e.elements],id:e.id||void 0};for(let n=0;n<t.elements.length;n++)e.hasIcon?t.elements[n].icon=t.elements[n].icon||"checkbox-circle-line":t.elements[n].icon=void 0;return t},W=e=>H.render("segmented",e),j=e=>W({segmented:R(e)}),F={id:"segmented",title:"DSFR/Component/Segmented",render:j,argTypes:N,args:g},r={args:{}},a={tags:["autodocs","!dev"],args:{hasIcon:!0,elements:o()}},d={tags:["autodocs","!dev"],args:{size:"sm",elements:o()}},c={tags:["autodocs","!dev"],args:{legendInline:!0,elements:o()}},l={tags:["autodocs","!dev"],args:{noLegend:!0,elements:o()}},i={tags:["autodocs","!dev"],args:{elements:o(3,!0)}};var u,p,S;r.parameters={...r.parameters,docs:{...(u=r.parameters)==null?void 0:u.docs,source:{originalSource:`{
  args: {}
}`,...(S=(p=r.parameters)==null?void 0:p.docs)==null?void 0:S.source}}};var f,h,y;a.parameters={...a.parameters,docs:{...(f=a.parameters)==null?void 0:f.docs,source:{originalSource:`{
  tags: ['autodocs', '!dev'],
  args: {
    hasIcon: true,
    elements: getSegmentedData()
  }
}`,...(y=(h=a.parameters)==null?void 0:h.docs)==null?void 0:y.source}}};var I,v,L;d.parameters={...d.parameters,docs:{...(I=d.parameters)==null?void 0:I.docs,source:{originalSource:`{
  tags: ['autodocs', '!dev'],
  args: {
    size: 'sm',
    elements: getSegmentedData()
  }
}`,...(L=(v=d.parameters)==null?void 0:v.docs)==null?void 0:L.source}}};var b,z,D;c.parameters={...c.parameters,docs:{...(b=c.parameters)==null?void 0:b.docs,source:{originalSource:`{
  tags: ['autodocs', '!dev'],
  args: {
    legendInline: true,
    elements: getSegmentedData()
  }
}`,...(D=(z=c.parameters)==null?void 0:z.docs)==null?void 0:D.source}}};var x,T,k;l.parameters={...l.parameters,docs:{...(x=l.parameters)==null?void 0:x.docs,source:{originalSource:`{
  tags: ['autodocs', '!dev'],
  args: {
    noLegend: true,
    elements: getSegmentedData()
  }
}`,...(k=(T=l.parameters)==null?void 0:T.docs)==null?void 0:k.source}}};var _,$,q;i.parameters={...i.parameters,docs:{...(_=i.parameters)==null?void 0:_.docs,source:{originalSource:`{
  tags: ['autodocs', '!dev'],
  args: {
    elements: getSegmentedData(3, true)
  }
}`,...(q=($=i.parameters)==null?void 0:$.docs)==null?void 0:q.source}}};const O=["SegmentedStory","WithIconStory","SizeSmStory","LegendInlineStory","NoLegendStory","HasDisabledStory"];export{i as HasDisabledStory,c as LegendInlineStory,l as NoLegendStory,r as SegmentedStory,d as SizeSmStory,a as WithIconStory,O as __namedExportsOrder,F as default};
